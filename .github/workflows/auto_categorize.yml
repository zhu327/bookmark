# 工作流的名称
name: Auto Categorize Bookmarks

# 工作流的触发条件
on:
  push:
    branches:
      - main  # 仅在 main 分支上触发
    paths:
      - 'README.md' # 仅当 README.md 文件发生变化时触发

# 权限设置，允许工作流修改仓库内容
permissions:
  contents: write

jobs:
  run-script-and-commit:
    # 使用最新的 Ubuntu 虚拟机运行
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出仓库代码
      # 使得工作流可以访问你的代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 关键修复：获取完整的 git 历史记录，而不仅仅是最后一次提交
          # 默认的浅克隆 (depth=1) 会导致 git log -n 2 失败
          fetch-depth: 0

      # 第二步：设置 Python 环境
      # 指定使用 Python 3.11 版本
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 第三步：安装 Python 依赖
      # 从 requirements.txt 文件中安装所需要的库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 第四步：运行自动化脚本
      # 执行你的 Python 脚本，并传入环境变量
      - name: Run the categorization script
        env:
          # 从 GitHub Secrets 中安全地获取 API 配置
          # 你需要在仓库的 Settings > Secrets and variables > Actions 中设置这些
          LLM_API_URL: ${{ secrets.LLM_API_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          LLM_MODEL_NAME: 'deepseek-ai/DeepSeek-R1-0528-Qwen3-8B' # 你也可以将此模型名称设置为一个 Secret 或 Variable
        run: python process_bookmarks.py

      # 第五步：提交并推送变更
      # 如果 category.md 文件被修改，则自动提交并推送到 main 分支
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # 提交信息
          commit_message: 'chore: ✨ Auto-update categories from new bookmarks'
          # 要提交的文件模式
          file_pattern: 'category.md'
          # 提交作者信息
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
